{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient, ObjectId } from 'mongodb'; // const DUMMY_MEETUPS = [\n//     {\n//       id: 'm1',\n//       title: 'A First Meetup',\n//       image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//       address: 'Some address 5, 12345 Some City',\n//       description: 'This is a first meetup!'\n//     },\n//     {\n//       id: 'm2',\n//       title: 'A Second Meetup',\n//       image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n//       address: 'Some address 10, 12345 Some City',\n//       description: 'This is a second meetup!'\n//     }\n//   ];\n\nconst MeetupDetailPage = props => {\n  return /*#__PURE__*/_jsx(MeetupDetail, {\n    title: props.meetups.title,\n    image: props.meetups.image,\n    address: props.meetups.address,\n    description: props.meetups.description\n  });\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://jasir5449:Jasir2299@cluster0.4b5wc.mongodb.net/meetups');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const singleMeetupId = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  const paths = singleMeetupId.map(meetup => ({\n    params: {\n      meetupId: meetup._id.toString()\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://jasir5449:Jasir2299@cluster0.4b5wc.mongodb.net/meetups');\n  const db = client.db();\n  const meetupCollection = db.collection('meetups');\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  return {\n    props: {\n      meetups: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    },\n    revalidate: 2\n  };\n}\nexport default MeetupDetailPage;","map":null,"metadata":{},"sourceType":"module"}