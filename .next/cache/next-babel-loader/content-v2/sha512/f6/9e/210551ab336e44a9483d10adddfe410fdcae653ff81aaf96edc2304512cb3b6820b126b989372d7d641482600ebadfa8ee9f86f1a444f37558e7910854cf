{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\react-web\\\\demo-nextjs\\\\components\\\\meetups\\\\MeetupFormNew.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useInput from '../../hooks/use-input';\n\nvar isNotEmpty = function isNotEmpty(value) {\n  return value.trim() !== '';\n};\n\nvar isEmail = function isEmail(value) {\n  return value.includes('@');\n};\n\nvar isLength = function isLength(value) {\n  return value.length > 5;\n};\n\nvar MeetupFormNew = function MeetupFormNew(props) {\n  _s();\n\n  var _useInput = useInput(isNotEmpty),\n      firstNameValue = _useInput.value,\n      firstNameFormValid = _useInput.isValid,\n      firstNameHasError = _useInput.hasError,\n      firstNameChangeHandler = _useInput.valueChangeHandler,\n      firstNameBlurHandler = _useInput.inputBlurHandler,\n      resetFirstName = _useInput.reset;\n\n  var _useInput2 = useInput(isNotEmpty),\n      lastNameValue = _useInput2.value,\n      lastNameFormValid = _useInput2.isValid,\n      lastNameHasError = _useInput2.hasError,\n      lastNameChangeHandler = _useInput2.valueChangeHandler,\n      lastNameBlurHandler = _useInput2.inputBlurHandler,\n      resetLastName = _useInput2.reset;\n\n  var _useInput3 = useInput(isEmail),\n      emailValue = _useInput3.value,\n      emailFormValid = _useInput3.isValid,\n      emailHasError = _useInput3.hasError,\n      emailChangeHandler = _useInput3.valueChangeHandler,\n      emailBlurHandler = _useInput3.inputBlurHandler,\n      resetEmail = _useInput3.reset;\n\n  var _useInput4 = useInput(isLength),\n      passwordValue = _useInput4.value,\n      passwordFormValid = _useInput4.isValid,\n      passwordHasError = _useInput4.hasError,\n      passwordChangeHandler = _useInput4.valueChangeHandler,\n      passwordBlurHandler = _useInput4.inputBlurHandler,\n      resetPassword = _useInput4.reset;\n\n  var _useInput5 = useInput(isNotEmpty),\n      userTypeValue = _useInput5.value,\n      userTypeFormValid = _useInput5.isValid,\n      userTypeHasError = _useInput5.hasError,\n      userTypeChangeHandler = _useInput5.valueChangeHandler,\n      userTypeBlurHandler = _useInput5.inputBlurHandler,\n      resetUserType = _useInput5.reset;\n\n  var formValid = false;\n\n  if (firstNameFormValid && lastNameFormValid && emailFormValid && passwordFormValid && userTypeFormValid) {\n    formValid = true;\n  }\n\n  var firstNameClass = firstNameHasError ? 'form-control invalid' : 'form-control ';\n  var lastNameClass = lastNameHasError ? 'form-control invalid' : 'form-control ';\n  var emailClass = emailHasError ? 'form-control invalid' : 'form-control ';\n  var passwordClass = passwordHasError ? 'form-control invalid' : 'form-control ';\n  var userTypeClass = userTypeHasError ? 'form-control invalid' : 'form-control ';\n\n  var formSubmitHandler = function formSubmitHandler(event) {\n    event.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(firstNameValue, lastNameValue, emailValue, passwordValue, userTypeValue);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n    resetPassword();\n    resetUserType();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: firstNameClass,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: firstNameValue,\n            onChange: firstNameChangeHandler,\n            onBlur: firstNameBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, _this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please Enter Your First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 35\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: lastNameClass,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: lastNameValue,\n            onChange: lastNameChangeHandler,\n            onBlur: lastNameBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, _this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please Enter Your Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 32\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: emailClass,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"E-Mail Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: emailValue,\n            onChange: emailChangeHandler,\n            onBlur: emailBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, _this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please Enter Valid Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: passwordClass,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            value: passwordValue,\n            onChange: passwordChangeHandler,\n            onBlur: passwordBlurHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, _this), passwordHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please Enter more than 5 Characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 34\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: userTypeClass,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"User Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: userTypeValue,\n            onBlur: userTypeBlurHandler,\n            onChange: userTypeChangeHandler,\n            name: \"usertypes\",\n            id: \"usertypes\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Please select Your User Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"supervisor\",\n              children: \"Supervisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"manager\",\n              children: \"Manager\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"salesman\",\n              children: \"Salesman\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"employee\",\n              children: \"Employee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, _this), userTypeHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-text\",\n            children: \"Please Select a User Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 34\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !formValid,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MeetupFormNew, \"poRSnWQg16RLEXkjj8NuMpbn2Rg=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput];\n});\n\n_c = MeetupFormNew;\nexport default MeetupFormNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupFormNew\");","map":{"version":3,"sources":["C:/react-web/demo-nextjs/components/meetups/MeetupFormNew.js"],"names":["React","useInput","isNotEmpty","value","trim","isEmail","includes","isLength","length","MeetupFormNew","props","firstNameValue","firstNameFormValid","isValid","firstNameHasError","hasError","firstNameChangeHandler","valueChangeHandler","firstNameBlurHandler","inputBlurHandler","resetFirstName","reset","lastNameValue","lastNameFormValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailFormValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","passwordValue","passwordFormValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","userTypeValue","userTypeFormValid","userTypeHasError","userTypeChangeHandler","userTypeBlurHandler","resetUserType","formValid","firstNameClass","lastNameClass","emailClass","passwordClass","userTypeClass","formSubmitHandler","event","preventDefault","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,OAAe,EAAnB;AAAA,CAAxB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAF,KAAK;AAAA,SAAIA,KAAK,CAACG,QAAN,CAAe,GAAf,CAAJ;AAAA,CAArB;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAJ,KAAK;AAAA,SAAGA,KAAK,CAACK,MAAN,GAAe,CAAlB;AAAA,CAAtB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAS1BT,QAAQ,CAACC,UAAD,CATkB;AAAA,MAGvBS,cAHuB,aAG7BR,KAH6B;AAAA,MAIrBS,kBAJqB,aAI7BC,OAJ6B;AAAA,MAKnBC,iBALmB,aAK7BC,QAL6B;AAAA,MAMVC,sBANU,aAM7BC,kBAN6B;AAAA,MAOZC,oBAPY,aAO7BC,gBAP6B;AAAA,MAQvBC,cARuB,aAQ7BC,KAR6B;;AAAA,mBAkB1BpB,QAAQ,CAACC,UAAD,CAlBkB;AAAA,MAYvBoB,aAZuB,cAY7BnB,KAZ6B;AAAA,MAarBoB,iBAbqB,cAa7BV,OAb6B;AAAA,MAcnBW,gBAdmB,cAc7BT,QAd6B;AAAA,MAeVU,qBAfU,cAe7BR,kBAf6B;AAAA,MAgBZS,mBAhBY,cAgB7BP,gBAhB6B;AAAA,MAiBvBQ,aAjBuB,cAiB7BN,KAjB6B;;AAAA,mBA0B1BpB,QAAQ,CAACI,OAAD,CA1BkB;AAAA,MAoBvBuB,UApBuB,cAoB7BzB,KApB6B;AAAA,MAqBrB0B,cArBqB,cAqB7BhB,OArB6B;AAAA,MAsBnBiB,aAtBmB,cAsB7Bf,QAtB6B;AAAA,MAuBVgB,kBAvBU,cAuB7Bd,kBAvB6B;AAAA,MAwBZe,gBAxBY,cAwB7Bb,gBAxB6B;AAAA,MAyBvBc,UAzBuB,cAyB7BZ,KAzB6B;;AAAA,mBAkC3BpB,QAAQ,CAACM,QAAD,CAlCmB;AAAA,MA4BvB2B,aA5BuB,cA4B7B/B,KA5B6B;AAAA,MA6BrBgC,iBA7BqB,cA6B7BtB,OA7B6B;AAAA,MA8BnBuB,gBA9BmB,cA8B7BrB,QA9B6B;AAAA,MA+BVsB,qBA/BU,cA+B7BpB,kBA/B6B;AAAA,MAgCZqB,mBAhCY,cAgC7BnB,gBAhC6B;AAAA,MAiCvBoB,aAjCuB,cAiC7BlB,KAjC6B;;AAAA,mBA4C3BpB,QAAQ,CAACC,UAAD,CA5CmB;AAAA,MAsCvBsC,aAtCuB,cAsC7BrC,KAtC6B;AAAA,MAuCrBsC,iBAvCqB,cAuC7B5B,OAvC6B;AAAA,MAwCnB6B,gBAxCmB,cAwC7B3B,QAxC6B;AAAA,MAyCV4B,qBAzCU,cAyC7B1B,kBAzC6B;AAAA,MA0CZ2B,mBA1CY,cA0C7BzB,gBA1C6B;AAAA,MA2CvB0B,aA3CuB,cA2C7BxB,KA3C6B;;AA8C9B,MAAIyB,SAAS,GAAG,KAAhB;;AAEA,MAAGlC,kBAAkB,IAAIW,iBAAtB,IAA2CM,cAA3C,IAA6DM,iBAA7D,IAAkFM,iBAArF,EAAuG;AACrGK,IAAAA,SAAS,GAAC,IAAV;AACD;;AAGD,MAAMC,cAAc,GAAGjC,iBAAiB,GAAG,sBAAH,GAA2B,eAAnE;AACA,MAAMkC,aAAa,GAAIxB,gBAAgB,GAAG,sBAAH,GAA2B,eAAlE;AACA,MAAMyB,UAAU,GAAOnB,aAAa,GAAG,sBAAH,GAA2B,eAA/D;AACA,MAAMoB,aAAa,GAAId,gBAAgB,GAAG,sBAAH,GAA2B,eAAlE;AACA,MAAMe,aAAa,GAAIT,gBAAgB,GAAG,sBAAH,GAA2B,eAAlE;;AAIA,MAAMU,iBAAiB,GAAE,SAAnBA,iBAAmB,CAACC,KAAD,EAAU;AACjCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAG,CAACR,SAAJ,EAAc;AACZ;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAY7C,cAAZ,EAA2BW,aAA3B,EAAyCM,UAAzC,EAAoDM,aAApD,EAAkEM,aAAlE;AACApB,IAAAA,cAAc;AACdO,IAAAA,aAAa;AACbM,IAAAA,UAAU;AACVM,IAAAA,aAAa;AACbM,IAAAA,aAAa;AACd,GAZD;;AAcD,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BAIA;AAAM,MAAA,QAAQ,EAAEO,iBAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAEL,cAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,MAFL;AAGE,YAAA,KAAK,EAAEpC,cAHT;AAIE,YAAA,QAAQ,EAAEK,sBAJZ;AAKE,YAAA,MAAM,EAAEE;AALV;AAAA;AAAA;AAAA;AAAA,mBAFF,EAQKJ,iBAAiB,iBAAI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAR1B;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAWE;AAAK,UAAA,SAAS,EAAEkC,aAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,EAAE,EAAC,MAFL;AAGE,YAAA,KAAK,EAAE1B,aAHT;AAIE,YAAA,QAAQ,EAAEG,qBAJZ;AAKE,YAAA,MAAM,EAAEC;AALV;AAAA;AAAA;AAAA;AAAA,mBAFF,EAQGF,gBAAgB,iBAAI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARvB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAwBE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEyB,UAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACA,YAAA,IAAI,EAAC,MADL;AAEA,YAAA,EAAE,EAAC,MAFH;AAGA,YAAA,KAAK,EAAErB,UAHP;AAIA,YAAA,QAAQ,EAAEG,kBAJV;AAKA,YAAA,MAAM,EAAEC;AALR;AAAA;AAAA;AAAA;AAAA,mBAFF,EAQCF,aAAa,iBAAI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARlB;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAWI;AAAK,UAAA,SAAS,EAAEoB,aAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACA,YAAA,IAAI,EAAC,UADL;AAEA,YAAA,EAAE,EAAC,UAFH;AAGA,YAAA,KAAK,EAAEhB,aAHP;AAIA,YAAA,QAAQ,EAAEG,qBAJV;AAKA,YAAA,MAAM,EAAEC;AALR;AAAA;AAAA;AAAA;AAAA,mBAFF,EAQGF,gBAAgB,iBAAI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARvB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAxBF,eA+CE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAEe,aAAhB;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAQ,YAAA,KAAK,EAAEX,aAAf;AAA8B,YAAA,MAAM,EAAEI,mBAAtC;AAA4D,YAAA,QAAQ,EAAED,qBAAtE;AAA6F,YAAA,IAAI,EAAC,WAAlG;AAA8G,YAAA,EAAE,EAAC,WAAjH;AAAA,oCACE;AAAQ,cAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAQ,cAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAGE;AAAQ,cAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAIE;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF,eAKE;AAAQ,cAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,eAME;AAAQ,cAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAUGD,gBAAgB,iBAAI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eA/CF,eAoEE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAQ,UAAA,QAAQ,EAAE,CAACI,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eApEF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,WADF;AA+ED,CA1JD;;GAAMrC,a;UASCR,Q,EASAA,Q,EAQAA,Q,EAQDA,Q,EAUAA,Q;;;KA5CAQ,a;AA4JN,eAAeA,aAAf","sourcesContent":["import React from 'react';\nimport useInput from '../../hooks/use-input';\n\n\nconst isNotEmpty = value => value.trim()!=='';\nconst isEmail = value => value.includes('@');\nconst isLength = value =>value.length > 5 ;\nconst MeetupFormNew = (props) => {\n\n   const {\n    value:firstNameValue,\n    isValid:firstNameFormValid,\n    hasError: firstNameHasError,\n    valueChangeHandler:firstNameChangeHandler,\n    inputBlurHandler:firstNameBlurHandler,\n    reset:resetFirstName\n   } = useInput(isNotEmpty);\n   \n   const {\n    value:lastNameValue,\n    isValid:lastNameFormValid,\n    hasError: lastNameHasError,\n    valueChangeHandler:lastNameChangeHandler,\n    inputBlurHandler:lastNameBlurHandler,\n    reset:resetLastName\n   } = useInput(isNotEmpty);\n   const {\n    value:emailValue,\n    isValid:emailFormValid,\n    hasError: emailHasError,\n    valueChangeHandler:emailChangeHandler,\n    inputBlurHandler:emailBlurHandler,\n    reset:resetEmail\n   } = useInput(isEmail);\n   const {\n    value:passwordValue,\n    isValid:passwordFormValid,\n    hasError: passwordHasError,\n    valueChangeHandler:passwordChangeHandler,\n    inputBlurHandler:passwordBlurHandler,\n    reset:resetPassword\n   }= useInput(isLength);\n\n\n   const {\n    value:userTypeValue,\n    isValid:userTypeFormValid,\n    hasError: userTypeHasError,\n    valueChangeHandler:userTypeChangeHandler,\n    inputBlurHandler:userTypeBlurHandler,\n    reset:resetUserType\n   }= useInput(isNotEmpty);\n \n   let formValid = false;\n\n   if(firstNameFormValid && lastNameFormValid && emailFormValid && passwordFormValid && userTypeFormValid){\n     formValid=true;\n   }\n\n\n   const firstNameClass = firstNameHasError ? 'form-control invalid' :'form-control ';\n   const lastNameClass  = lastNameHasError ? 'form-control invalid' :'form-control ';\n   const emailClass     = emailHasError ? 'form-control invalid' :'form-control ';\n   const passwordClass  = passwordHasError ? 'form-control invalid' :'form-control ';\n   const userTypeClass  = userTypeHasError ? 'form-control invalid' :'form-control ';\n\n\n\n   const formSubmitHandler =(event) =>{\n     event.preventDefault();\n\n     if(!formValid){\n       return;\n     }\n     console.log(firstNameValue,lastNameValue,emailValue,passwordValue,userTypeValue);\n     resetFirstName();\n     resetLastName();\n     resetEmail();\n     resetPassword();\n     resetUserType();\n   }\n\n  return (\n    <React.Fragment>\n\n  \n\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={firstNameClass}>\n          <label htmlFor='name'>First Name</label>\n          <input \n            type='text' \n            id='name'\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler} />\n            {firstNameHasError && <p className=\"error-text\">Please Enter Your First Name</p>}\n        </div>\n        <div className={lastNameClass}>\n          <label htmlFor='name'>Last Name</label>\n          <input \n            type='text' \n            id='name'\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler} />\n          {lastNameHasError && <p className=\"error-text\">Please Enter Your Last Name</p>}\n         \n        </div>\n      </div>\n      <div className='control-group'>\n          <div className={emailClass}>\n            <label htmlFor='name'>E-Mail Address</label>\n            <input \n            type='text' \n            id='name' \n            value={emailValue}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler} />\n          {emailHasError && <p className=\"error-text\">Please Enter Valid Email</p>}\n          </div>\n          <div className={passwordClass}>\n            <label htmlFor='password'>Password</label>\n            <input \n            type='password'\n            id='password' \n            value={passwordValue}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler} />\n            {passwordHasError && <p className=\"error-text\">Please Enter more than 5 Characters</p>}\n          </div>\n      </div>\n\n      <div className='control-group'>\n          <div className={userTypeClass}>\n            <label htmlFor='name'>User Types</label>\n            <select value={userTypeValue} onBlur={userTypeBlurHandler}  onChange={userTypeChangeHandler} name=\"usertypes\" id=\"usertypes\">\n              <option value=''>Please select Your User Type</option>\n              <option value='admin'>Admin</option>\n              <option value='supervisor'>Supervisor</option>\n              <option value='manager'>Manager</option>\n              <option value='salesman'>Salesman</option>\n              <option value='employee'>Employee</option>\n            </select>\n            {userTypeHasError && <p className=\"error-text\">Please Select a User Type</p>}\n          </div>\n          {/* <div className={userTypeClass}>\n          <label htmlFor='gender'>Gender</label>\n             <input type=\"radio\" value=\"MALE\" defaultChecked name=\"gender\" id=\"gender\"/> Male\n             <input  type=\"radio\" value=\"FAMELE\"  name=\"gender\" id=\"gender\" /> Female       \n          </div> */}\n      </div>  \n      \n        \n      <div className='form-actions'>\n        <button disabled={!formValid}>Submit</button>\n      </div>\n    </form>\n    </React.Fragment>\n  );\n};\n\nexport default MeetupFormNew;\n"]},"metadata":{},"sourceType":"module"}