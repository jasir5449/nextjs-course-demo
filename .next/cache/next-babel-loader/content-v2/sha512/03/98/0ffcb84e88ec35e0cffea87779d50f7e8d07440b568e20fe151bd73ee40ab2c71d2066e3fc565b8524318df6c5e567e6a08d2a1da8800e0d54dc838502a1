{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react-web\\\\demo-nextjs\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/globals.css';\nimport Layout from '../components/layout/Layout';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport Router from 'next/router';\nimport { useState } from 'react';\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  Router.events.on(\"routeChangeStart\", url => {\n    console.log('Change start start');\n    setIsLoading(true);\n  });\n  Router.events.on(\"routeChangeComplete\", url => {\n    console.log('Change in Complete');\n    setIsLoading(true);\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }, this), !isLoading && /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/react-web/demo-nextjs/pages/_app.js"],"names":["Layout","LoadingSpinner","Router","useState","MyApp","Component","pageProps","isLoading","setIsLoading","events","on","url","console","log"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAWC;AAAX,MAAyBL,QAAQ,CAAC,IAAD,CAAvC;AAEAD,EAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAsCC,GAAD,IAAQ;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;AAIAN,EAAAA,MAAM,CAACO,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAyCC,GAAD,IAAQ;AAC9CC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAHD;AAIA,sBAAS,QAAC,MAAD;AAAA,eACID,SAAS,iBAAI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YADjB,EAEI,CAACA,SAAD,iBAAc,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA,YAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAID;;AAED,eAAeF,KAAf","sourcesContent":["import '../styles/globals.css';\nimport Layout from '../components/layout/Layout';\nimport LoadingSpinner from '../components/ui/LoadingSpinner';\nimport Router from 'next/router';\nimport { useState } from 'react';\n\nfunction MyApp({ Component, pageProps }) {\n  const [isLoading,setIsLoading]=useState(true);\n\n  Router.events.on(\"routeChangeStart\", (url) =>{\n    console.log('Change start start');\n    setIsLoading(true);\n  });\n  Router.events.on(\"routeChangeComplete\", (url) =>{\n    console.log('Change in Complete');\n    setIsLoading(true);\n  });\n  return  (<Layout>\n              {isLoading && <div className='centered'><LoadingSpinner /></div> }\n              {!isLoading && <Component {...pageProps} /> }\n          </Layout> );\n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}