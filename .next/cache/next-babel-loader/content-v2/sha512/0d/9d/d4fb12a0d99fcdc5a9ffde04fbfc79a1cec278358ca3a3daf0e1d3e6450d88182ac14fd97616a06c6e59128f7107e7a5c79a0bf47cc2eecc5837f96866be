{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\react-web\\\\demo-nextjs\\\\components\\\\meetups\\\\MeetupFormNew.js\";\nimport React from 'react';\nimport useInput from '../../hooks/use-input';\n\nconst isNotEmpty = value => value.trim() !== '';\n\nconst isEmail = value => value.includes('@');\n\nconst isLength = value => value.length > 5;\n\nconst MeetupFormNew = props => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameFormValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: lastNameValue,\n    isValid: lastNameFormValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: emailValue,\n    isValid: emailFormValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  const {\n    value: passwordValue,\n    isValid: passwordFormValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPassword\n  } = useInput(isLength);\n  const {\n    value: userTypeValue,\n    isValid: userTypeFormValid,\n    hasError: userTypeHasError,\n    valueChangeHandler: userTypeChangeHandler,\n    inputBlurHandler: userTypeBlurHandler,\n    reset: resetUserType\n  } = useInput(isNotEmpty);\n  let formValid = false;\n\n  if (firstNameFormValid && lastNameFormValid && emailFormValid && passwordFormValid && userTypeFormValid) {\n    formValid = true;\n  }\n\n  const firstNameClass = firstNameHasError ? 'form-control invalid' : 'form-control ';\n  const lastNameClass = lastNameHasError ? 'form-control invalid' : 'form-control ';\n  const emailClass = emailHasError ? 'form-control invalid' : 'form-control ';\n  const passwordClass = passwordHasError ? 'form-control invalid' : 'form-control ';\n  const userTypeClass = userTypeHasError ? 'form-control invalid' : 'form-control ';\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    console.log(firstNameValue, lastNameValue, emailValue, passwordValue, userTypeValue);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n    resetPassword();\n    resetUserType();\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: firstNameClass,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: firstNameValue,\n              onChange: firstNameChangeHandler,\n              onBlur: firstNameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 11\n            }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: \"Please Enter Your First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: lastNameClass,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: lastNameValue,\n              onChange: lastNameChangeHandler,\n              onBlur: lastNameBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 11\n            }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: \"Please Enter Your Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: emailClass,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"E-Mail Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"name\",\n              value: emailValue,\n              onChange: emailChangeHandler,\n              onBlur: emailBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: \"Please Enter Valid Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: passwordClass,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: passwordValue,\n              onChange: passwordChangeHandler,\n              onBlur: passwordBlurHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this), passwordHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: \"Please Enter more than 5 Characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-group\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: userTypeClass,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"User Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: userTypeValue,\n              onBlur: userTypeBlurHandler,\n              onChange: userTypeChangeHandler,\n              name: \"usertypes\",\n              id: \"usertypes\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Please select Your User Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"supervisor\",\n                children: \"Supervisor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"manager\",\n                children: \"Manager\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"salesman\",\n                children: \"Salesman\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"employee\",\n                children: \"Employee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this), userTypeHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-text\",\n              children: \"Please Select a User Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: !formValid,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MeetupFormNew;","map":{"version":3,"sources":["C:/react-web/demo-nextjs/components/meetups/MeetupFormNew.js"],"names":["React","useInput","isNotEmpty","value","trim","isEmail","includes","isLength","length","MeetupFormNew","props","firstNameValue","isValid","firstNameFormValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","lastNameValue","lastNameFormValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","emailFormValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","passwordValue","passwordFormValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","userTypeValue","userTypeFormValid","userTypeHasError","userTypeChangeHandler","userTypeBlurHandler","resetUserType","formValid","firstNameClass","lastNameClass","emailClass","passwordClass","userTypeClass","formSubmitHandler","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useInput from '../../hooks/use-input';\n\n\nconst isNotEmpty = value => value.trim()!=='';\nconst isEmail = value => value.includes('@');\nconst isLength = value =>value.length > 5 ;\nconst MeetupFormNew = (props) => {\n\n   const {\n    value:firstNameValue,\n    isValid:firstNameFormValid,\n    hasError: firstNameHasError,\n    valueChangeHandler:firstNameChangeHandler,\n    inputBlurHandler:firstNameBlurHandler,\n    reset:resetFirstName\n   } = useInput(isNotEmpty);\n\n   const {\n    value:lastNameValue,\n    isValid:lastNameFormValid,\n    hasError: lastNameHasError,\n    valueChangeHandler:lastNameChangeHandler,\n    inputBlurHandler:lastNameBlurHandler,\n    reset:resetLastName\n   } = useInput(isNotEmpty);\n   const {\n    value:emailValue,\n    isValid:emailFormValid,\n    hasError: emailHasError,\n    valueChangeHandler:emailChangeHandler,\n    inputBlurHandler:emailBlurHandler,\n    reset:resetEmail\n   } = useInput(isEmail);\n   const {\n    value:passwordValue,\n    isValid:passwordFormValid,\n    hasError: passwordHasError,\n    valueChangeHandler:passwordChangeHandler,\n    inputBlurHandler:passwordBlurHandler,\n    reset:resetPassword\n   }= useInput(isLength);\n\n\n   const {\n    value:userTypeValue,\n    isValid:userTypeFormValid,\n    hasError: userTypeHasError,\n    valueChangeHandler:userTypeChangeHandler,\n    inputBlurHandler:userTypeBlurHandler,\n    reset:resetUserType\n   }= useInput(isNotEmpty);\n \n   let formValid = false;\n\n   if(firstNameFormValid && lastNameFormValid && emailFormValid && passwordFormValid && userTypeFormValid){\n     formValid=true;\n   }\n\n\n   const firstNameClass = firstNameHasError ? 'form-control invalid' :'form-control ';\n   const lastNameClass  = lastNameHasError ? 'form-control invalid' :'form-control ';\n   const emailClass     = emailHasError ? 'form-control invalid' :'form-control ';\n   const passwordClass  = passwordHasError ? 'form-control invalid' :'form-control ';\n   const userTypeClass  = userTypeHasError ? 'form-control invalid' :'form-control ';\n\n\n\n   const formSubmitHandler =(event) =>{\n     event.preventDefault();\n\n     if(!formValid){\n       return;\n     }\n     console.log(firstNameValue,lastNameValue,emailValue,passwordValue,userTypeValue);\n     resetFirstName();\n     resetLastName();\n     resetEmail();\n     resetPassword();\n     resetUserType();\n   }\n\n  return (\n    <React.Fragment>\n\n  \n  <Card>\n    <form onSubmit={formSubmitHandler}>\n      <div className='control-group'>\n        <div className={firstNameClass}>\n          <label htmlFor='name'>First Name</label>\n          <input \n            type='text' \n            id='name'\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler} />\n            {firstNameHasError && <p className=\"error-text\">Please Enter Your First Name</p>}\n        </div>\n        <div className={lastNameClass}>\n          <label htmlFor='name'>Last Name</label>\n          <input \n            type='text' \n            id='name'\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler} />\n          {lastNameHasError && <p className=\"error-text\">Please Enter Your Last Name</p>}\n         \n        </div>\n      </div>\n      <div className='control-group'>\n          <div className={emailClass}>\n            <label htmlFor='name'>E-Mail Address</label>\n            <input \n            type='text' \n            id='name' \n            value={emailValue}\n            onChange={emailChangeHandler}\n            onBlur={emailBlurHandler} />\n          {emailHasError && <p className=\"error-text\">Please Enter Valid Email</p>}\n          </div>\n          <div className={passwordClass}>\n            <label htmlFor='password'>Password</label>\n            <input \n            type='password'\n            id='password' \n            value={passwordValue}\n            onChange={passwordChangeHandler}\n            onBlur={passwordBlurHandler} />\n            {passwordHasError && <p className=\"error-text\">Please Enter more than 5 Characters</p>}\n          </div>\n      </div>\n\n      <div className='control-group'>\n          <div className={userTypeClass}>\n            <label htmlFor='name'>User Types</label>\n            <select value={userTypeValue} onBlur={userTypeBlurHandler}  onChange={userTypeChangeHandler} name=\"usertypes\" id=\"usertypes\">\n              <option value=''>Please select Your User Type</option>\n              <option value='admin'>Admin</option>\n              <option value='supervisor'>Supervisor</option>\n              <option value='manager'>Manager</option>\n              <option value='salesman'>Salesman</option>\n              <option value='employee'>Employee</option>\n            </select>\n            {userTypeHasError && <p className=\"error-text\">Please Select a User Type</p>}\n          </div>\n          {/* <div className={userTypeClass}>\n          <label htmlFor='gender'>Gender</label>\n             <input type=\"radio\" value=\"MALE\" defaultChecked name=\"gender\" id=\"gender\"/> Male\n             <input  type=\"radio\" value=\"FAMELE\"  name=\"gender\" id=\"gender\" /> Female       \n          </div> */}\n      </div>  \n      \n        \n      <div className='form-actions'>\n        <button disabled={!formValid}>Submit</button>\n      </div>\n    </form>\n\n    </Card>\n    </React.Fragment>\n  );\n};\n\nexport default MeetupFormNew;\n"]},"metadata":{},"sourceType":"module"}